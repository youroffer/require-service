// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"

	"github.com/go-faster/jx"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AdminBearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *AdminBearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *AdminBearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #
type Analytic struct {
	// Уникальный идентификатор аналитики.
	ID int `json:"id"`
	// Заголовок должности.
	PostTitle string `json:"post_title"`
	// Фильтр поискового запроса hh.ru для аналитики.
	SearchQuery string `json:"search_query"`
	// Дата и время последнего обновления записи.
	ParseAt OptDateTime `json:"parse_at"`
	// Количество вакансий.
	VacanciesNum OptInt `json:"vacancies_num"`
}

// GetID returns the value of ID.
func (s *Analytic) GetID() int {
	return s.ID
}

// GetPostTitle returns the value of PostTitle.
func (s *Analytic) GetPostTitle() string {
	return s.PostTitle
}

// GetSearchQuery returns the value of SearchQuery.
func (s *Analytic) GetSearchQuery() string {
	return s.SearchQuery
}

// GetParseAt returns the value of ParseAt.
func (s *Analytic) GetParseAt() OptDateTime {
	return s.ParseAt
}

// GetVacanciesNum returns the value of VacanciesNum.
func (s *Analytic) GetVacanciesNum() OptInt {
	return s.VacanciesNum
}

// SetID sets the value of ID.
func (s *Analytic) SetID(val int) {
	s.ID = val
}

// SetPostTitle sets the value of PostTitle.
func (s *Analytic) SetPostTitle(val string) {
	s.PostTitle = val
}

// SetSearchQuery sets the value of SearchQuery.
func (s *Analytic) SetSearchQuery(val string) {
	s.SearchQuery = val
}

// SetParseAt sets the value of ParseAt.
func (s *Analytic) SetParseAt(val OptDateTime) {
	s.ParseAt = val
}

// SetVacanciesNum sets the value of VacanciesNum.
func (s *Analytic) SetVacanciesNum(val OptInt) {
	s.VacanciesNum = val
}

func (*Analytic) v1AdminAnalyticsAnalyticIDPutRes() {}
func (*Analytic) v1AdminAnalyticsPostRes()          {}

// Ref: #
type AnalyticPost struct {
	// Идентификатор должности.
	PostID int `json:"post_id"`
	// Фильтр поискового запроса hh.ru для аналитики.
	SearchQuery string `json:"search_query"`
}

// GetPostID returns the value of PostID.
func (s *AnalyticPost) GetPostID() int {
	return s.PostID
}

// GetSearchQuery returns the value of SearchQuery.
func (s *AnalyticPost) GetSearchQuery() string {
	return s.SearchQuery
}

// SetPostID sets the value of PostID.
func (s *AnalyticPost) SetPostID(val int) {
	s.PostID = val
}

// SetSearchQuery sets the value of SearchQuery.
func (s *AnalyticPost) SetSearchQuery(val string) {
	s.SearchQuery = val
}

// Ref: #
type AnalyticPut struct {
	// Идентификатор должности.
	PostsID OptInt `json:"posts_id"`
	// Фильтр поискового запроса hh.ru для аналитики.
	SearchQuery OptString `json:"search_query"`
}

// GetPostsID returns the value of PostsID.
func (s *AnalyticPut) GetPostsID() OptInt {
	return s.PostsID
}

// GetSearchQuery returns the value of SearchQuery.
func (s *AnalyticPut) GetSearchQuery() OptString {
	return s.SearchQuery
}

// SetPostsID sets the value of PostsID.
func (s *AnalyticPut) SetPostsID(val OptInt) {
	s.PostsID = val
}

// SetSearchQuery sets the value of SearchQuery.
func (s *AnalyticPut) SetSearchQuery(val OptString) {
	s.SearchQuery = val
}

// Ref: #
type AnalyticWords struct {
	Analytic Analytic `json:"analytic"`
	// Список навыков.
	Skills []Word `json:"skills"`
	// Список ключевых слов.
	Keywords []Word `json:"keywords"`
}

// GetAnalytic returns the value of Analytic.
func (s *AnalyticWords) GetAnalytic() Analytic {
	return s.Analytic
}

// GetSkills returns the value of Skills.
func (s *AnalyticWords) GetSkills() []Word {
	return s.Skills
}

// GetKeywords returns the value of Keywords.
func (s *AnalyticWords) GetKeywords() []Word {
	return s.Keywords
}

// SetAnalytic sets the value of Analytic.
func (s *AnalyticWords) SetAnalytic(val Analytic) {
	s.Analytic = val
}

// SetSkills sets the value of Skills.
func (s *AnalyticWords) SetSkills(val []Word) {
	s.Skills = val
}

// SetKeywords sets the value of Keywords.
func (s *AnalyticWords) SetKeywords(val []Word) {
	s.Keywords = val
}

func (*AnalyticWords) v1AnalyticsAnalyticIDGetRes()      {}
func (*AnalyticWords) v1AnalyticsAnalyticIDLimitGetRes() {}

// Ref: #
type AnalyticsResp struct {
	Data    []Analytic `json:"data"`
	Page    int        `json:"page"`
	Pages   int        `json:"pages"`
	PerPage int        `json:"per_page"`
}

// GetData returns the value of Data.
func (s *AnalyticsResp) GetData() []Analytic {
	return s.Data
}

// GetPage returns the value of Page.
func (s *AnalyticsResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *AnalyticsResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *AnalyticsResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *AnalyticsResp) SetData(val []Analytic) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *AnalyticsResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *AnalyticsResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *AnalyticsResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*AnalyticsResp) v1AdminAnalyticsGetRes() {}

// Ref: #
type CategoriesPostsResp map[string][]CategoriesPostsRespItemItem

func (s *CategoriesPostsResp) init() CategoriesPostsResp {
	m := *s
	if m == nil {
		m = map[string][]CategoriesPostsRespItemItem{}
		*s = m
	}
	return m
}

func (*CategoriesPostsResp) v1CategoriesGetRes() {}

type CategoriesPostsRespItemItem struct {
	// Идентификатор логотипа.
	LogoID int `json:"logo_id"`
	// Заголовок должности.
	Title string `json:"title"`
	// Является ли пост публичным.
	Public bool `json:"public"`
}

// GetLogoID returns the value of LogoID.
func (s *CategoriesPostsRespItemItem) GetLogoID() int {
	return s.LogoID
}

// GetTitle returns the value of Title.
func (s *CategoriesPostsRespItemItem) GetTitle() string {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *CategoriesPostsRespItemItem) GetPublic() bool {
	return s.Public
}

// SetLogoID sets the value of LogoID.
func (s *CategoriesPostsRespItemItem) SetLogoID(val int) {
	s.LogoID = val
}

// SetTitle sets the value of Title.
func (s *CategoriesPostsRespItemItem) SetTitle(val string) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *CategoriesPostsRespItemItem) SetPublic(val bool) {
	s.Public = val
}

// Ref: #
type CategoriesResp struct {
	Data    []Category `json:"data"`
	Page    int        `json:"page"`
	Pages   int        `json:"pages"`
	PerPage int        `json:"per_page"`
}

// GetData returns the value of Data.
func (s *CategoriesResp) GetData() []Category {
	return s.Data
}

// GetPage returns the value of Page.
func (s *CategoriesResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *CategoriesResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *CategoriesResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *CategoriesResp) SetData(val []Category) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *CategoriesResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *CategoriesResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *CategoriesResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*CategoriesResp) v1AdminCategoriesGetRes() {}

// Ref: #
type Category struct {
	ID     int    `json:"id"`
	Title  string `json:"title"`
	Public bool   `json:"public"`
}

// GetID returns the value of ID.
func (s *Category) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Category) GetTitle() string {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *Category) GetPublic() bool {
	return s.Public
}

// SetID sets the value of ID.
func (s *Category) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Category) SetTitle(val string) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *Category) SetPublic(val bool) {
	s.Public = val
}

func (*Category) v1AdminCategoriesCategoryIDPutRes() {}
func (*Category) v1AdminCategoriesPostRes()          {}

// Ref: #
type CategoryPost struct {
	Title  string `json:"title"`
	Public bool   `json:"public"`
}

// GetTitle returns the value of Title.
func (s *CategoryPost) GetTitle() string {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *CategoryPost) GetPublic() bool {
	return s.Public
}

// SetTitle sets the value of Title.
func (s *CategoryPost) SetTitle(val string) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *CategoryPost) SetPublic(val bool) {
	s.Public = val
}

// Ref: #
type CategoryPut struct {
	Title  OptString `json:"title"`
	Public OptBool   `json:"public"`
}

// GetTitle returns the value of Title.
func (s *CategoryPut) GetTitle() OptString {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *CategoryPut) GetPublic() OptBool {
	return s.Public
}

// SetTitle sets the value of Title.
func (s *CategoryPut) SetTitle(val OptString) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *CategoryPut) SetPublic(val OptBool) {
	s.Public = val
}

// Ref: #
type Error struct {
	// Error message.
	Message string       `json:"message"`
	Details ErrorDetails `json:"details"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() ErrorDetails {
	return s.Details
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val ErrorDetails) {
	s.Details = val
}

func (*Error) v1CategoriesGetRes() {}

type ErrorDetails map[string]jx.Raw

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #
type Filter struct {
	// Уникальный идентификатор фильтра.
	ID int `json:"id"`
	// Уникальный фильтр.
	Word string `json:"word"`
}

// GetID returns the value of ID.
func (s *Filter) GetID() int {
	return s.ID
}

// GetWord returns the value of Word.
func (s *Filter) GetWord() string {
	return s.Word
}

// SetID sets the value of ID.
func (s *Filter) SetID(val int) {
	s.ID = val
}

// SetWord sets the value of Word.
func (s *Filter) SetWord(val string) {
	s.Word = val
}

func (*Filter) v1AdminFiltersPostRes() {}

// Ref: #
type FiltersResp struct {
	Data    []Filter `json:"data"`
	Page    int      `json:"page"`
	Pages   int      `json:"pages"`
	PerPage int      `json:"per_page"`
}

// GetData returns the value of Data.
func (s *FiltersResp) GetData() []Filter {
	return s.Data
}

// GetPage returns the value of Page.
func (s *FiltersResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *FiltersResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *FiltersResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *FiltersResp) SetData(val []Filter) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *FiltersResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *FiltersResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *FiltersResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*FiltersResp) v1AdminFiltersGetRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCategory returns new OptCategory with value set to v.
func NewOptCategory(v Category) OptCategory {
	return OptCategory{
		Value: v,
		Set:   true,
	}
}

// OptCategory is optional Category.
type OptCategory struct {
	Value Category
	Set   bool
}

// IsSet returns true if OptCategory was set.
func (o OptCategory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCategory) Reset() {
	var v Category
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCategory) SetTo(v Category) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCategory) Get() (v Category, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCategory) Or(d Category) Category {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #
type Position struct {
	// Уникальный идентификатор поста.
	ID       OptInt      `json:"id"`
	Category OptCategory `json:"category"`
	// Идентификатор логотипа.
	LogoID int `json:"logo_id"`
	// Заголовок поста.
	Title string `json:"title"`
	// Является ли пост публичным.
	Public bool `json:"public"`
}

// GetID returns the value of ID.
func (s *Position) GetID() OptInt {
	return s.ID
}

// GetCategory returns the value of Category.
func (s *Position) GetCategory() OptCategory {
	return s.Category
}

// GetLogoID returns the value of LogoID.
func (s *Position) GetLogoID() int {
	return s.LogoID
}

// GetTitle returns the value of Title.
func (s *Position) GetTitle() string {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *Position) GetPublic() bool {
	return s.Public
}

// SetID sets the value of ID.
func (s *Position) SetID(val OptInt) {
	s.ID = val
}

// SetCategory sets the value of Category.
func (s *Position) SetCategory(val OptCategory) {
	s.Category = val
}

// SetLogoID sets the value of LogoID.
func (s *Position) SetLogoID(val int) {
	s.LogoID = val
}

// SetTitle sets the value of Title.
func (s *Position) SetTitle(val string) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *Position) SetPublic(val bool) {
	s.Public = val
}

func (*Position) v1AdminPositionsPositionIDPutRes() {}
func (*Position) v1AdminPositionsPostRes()          {}

// Ref: #
type PositionPost struct {
	// Идентификатор категории.
	CategoryID int `json:"category_id"`
	// Идентификатор логотипа.
	LogoID int `json:"logo_id"`
	// Заголовок поста.
	Title string `json:"title"`
	// Является ли пост публичным.
	Public bool `json:"public"`
}

// GetCategoryID returns the value of CategoryID.
func (s *PositionPost) GetCategoryID() int {
	return s.CategoryID
}

// GetLogoID returns the value of LogoID.
func (s *PositionPost) GetLogoID() int {
	return s.LogoID
}

// GetTitle returns the value of Title.
func (s *PositionPost) GetTitle() string {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *PositionPost) GetPublic() bool {
	return s.Public
}

// SetCategoryID sets the value of CategoryID.
func (s *PositionPost) SetCategoryID(val int) {
	s.CategoryID = val
}

// SetLogoID sets the value of LogoID.
func (s *PositionPost) SetLogoID(val int) {
	s.LogoID = val
}

// SetTitle sets the value of Title.
func (s *PositionPost) SetTitle(val string) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *PositionPost) SetPublic(val bool) {
	s.Public = val
}

// Ref: #
type PositionPut struct {
	// Идентификатор категории.
	CategoryID OptInt `json:"category_id"`
	// Идентификатор логотипа.
	LogoID OptInt `json:"logo_id"`
	// Заголовок поста.
	Title OptString `json:"title"`
	// Является ли пост публичным.
	Public OptBool `json:"public"`
}

// GetCategoryID returns the value of CategoryID.
func (s *PositionPut) GetCategoryID() OptInt {
	return s.CategoryID
}

// GetLogoID returns the value of LogoID.
func (s *PositionPut) GetLogoID() OptInt {
	return s.LogoID
}

// GetTitle returns the value of Title.
func (s *PositionPut) GetTitle() OptString {
	return s.Title
}

// GetPublic returns the value of Public.
func (s *PositionPut) GetPublic() OptBool {
	return s.Public
}

// SetCategoryID sets the value of CategoryID.
func (s *PositionPut) SetCategoryID(val OptInt) {
	s.CategoryID = val
}

// SetLogoID sets the value of LogoID.
func (s *PositionPut) SetLogoID(val OptInt) {
	s.LogoID = val
}

// SetTitle sets the value of Title.
func (s *PositionPut) SetTitle(val OptString) {
	s.Title = val
}

// SetPublic sets the value of Public.
func (s *PositionPut) SetPublic(val OptBool) {
	s.Public = val
}

// Ref: #
type PositionsResp struct {
	Data []Position `json:"data"`
	// Общее количество постов.
	Total OptInt `json:"total"`
	// Текущая страница.
	Page OptInt `json:"page"`
	// Количество постов на странице.
	PerPage OptInt `json:"per_page"`
}

// GetData returns the value of Data.
func (s *PositionsResp) GetData() []Position {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *PositionsResp) GetTotal() OptInt {
	return s.Total
}

// GetPage returns the value of Page.
func (s *PositionsResp) GetPage() OptInt {
	return s.Page
}

// GetPerPage returns the value of PerPage.
func (s *PositionsResp) GetPerPage() OptInt {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *PositionsResp) SetData(val []Position) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *PositionsResp) SetTotal(val OptInt) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *PositionsResp) SetPage(val OptInt) {
	s.Page = val
}

// SetPerPage sets the value of PerPage.
func (s *PositionsResp) SetPerPage(val OptInt) {
	s.PerPage = val
}

func (*PositionsResp) v1AdminPositionsGetRes() {}

type UserBearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *UserBearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *UserBearerAuth) SetToken(val string) {
	s.Token = val
}

// V1AdminAnalyticsAnalyticIDDeleteNoContent is response for V1AdminAnalyticsAnalyticIDDelete operation.
type V1AdminAnalyticsAnalyticIDDeleteNoContent struct{}

func (*V1AdminAnalyticsAnalyticIDDeleteNoContent) v1AdminAnalyticsAnalyticIDDeleteRes() {}

type V1AdminAnalyticsAnalyticIDDeleteNotFound Error

func (*V1AdminAnalyticsAnalyticIDDeleteNotFound) v1AdminAnalyticsAnalyticIDDeleteRes() {}

type V1AdminAnalyticsAnalyticIDDeleteUnauthorized Error

func (*V1AdminAnalyticsAnalyticIDDeleteUnauthorized) v1AdminAnalyticsAnalyticIDDeleteRes() {}

type V1AdminAnalyticsAnalyticIDPutBadRequest Error

func (*V1AdminAnalyticsAnalyticIDPutBadRequest) v1AdminAnalyticsAnalyticIDPutRes() {}

type V1AdminAnalyticsAnalyticIDPutConflict Error

func (*V1AdminAnalyticsAnalyticIDPutConflict) v1AdminAnalyticsAnalyticIDPutRes() {}

type V1AdminAnalyticsAnalyticIDPutNotFound Error

func (*V1AdminAnalyticsAnalyticIDPutNotFound) v1AdminAnalyticsAnalyticIDPutRes() {}

type V1AdminAnalyticsAnalyticIDPutUnauthorized Error

func (*V1AdminAnalyticsAnalyticIDPutUnauthorized) v1AdminAnalyticsAnalyticIDPutRes() {}

type V1AdminAnalyticsGetBadRequest Error

func (*V1AdminAnalyticsGetBadRequest) v1AdminAnalyticsGetRes() {}

type V1AdminAnalyticsGetNotFound Error

func (*V1AdminAnalyticsGetNotFound) v1AdminAnalyticsGetRes() {}

type V1AdminAnalyticsGetUnauthorized Error

func (*V1AdminAnalyticsGetUnauthorized) v1AdminAnalyticsGetRes() {}

type V1AdminAnalyticsPostBadRequest Error

func (*V1AdminAnalyticsPostBadRequest) v1AdminAnalyticsPostRes() {}

type V1AdminAnalyticsPostConflict Error

func (*V1AdminAnalyticsPostConflict) v1AdminAnalyticsPostRes() {}

type V1AdminAnalyticsPostNotFound Error

func (*V1AdminAnalyticsPostNotFound) v1AdminAnalyticsPostRes() {}

type V1AdminAnalyticsPostUnauthorized Error

func (*V1AdminAnalyticsPostUnauthorized) v1AdminAnalyticsPostRes() {}

type V1AdminAnalyticsPostUnprocessableEntity Error

func (*V1AdminAnalyticsPostUnprocessableEntity) v1AdminAnalyticsPostRes() {}

type V1AdminCategoriesCategoryIDDeleteConflict Error

func (*V1AdminCategoriesCategoryIDDeleteConflict) v1AdminCategoriesCategoryIDDeleteRes() {}

// V1AdminCategoriesCategoryIDDeleteNoContent is response for V1AdminCategoriesCategoryIDDelete operation.
type V1AdminCategoriesCategoryIDDeleteNoContent struct{}

func (*V1AdminCategoriesCategoryIDDeleteNoContent) v1AdminCategoriesCategoryIDDeleteRes() {}

type V1AdminCategoriesCategoryIDDeleteNotFound Error

func (*V1AdminCategoriesCategoryIDDeleteNotFound) v1AdminCategoriesCategoryIDDeleteRes() {}

type V1AdminCategoriesCategoryIDDeleteUnauthorized Error

func (*V1AdminCategoriesCategoryIDDeleteUnauthorized) v1AdminCategoriesCategoryIDDeleteRes() {}

type V1AdminCategoriesCategoryIDPutBadRequest Error

func (*V1AdminCategoriesCategoryIDPutBadRequest) v1AdminCategoriesCategoryIDPutRes() {}

type V1AdminCategoriesCategoryIDPutConflict Error

func (*V1AdminCategoriesCategoryIDPutConflict) v1AdminCategoriesCategoryIDPutRes() {}

type V1AdminCategoriesCategoryIDPutNotFound Error

func (*V1AdminCategoriesCategoryIDPutNotFound) v1AdminCategoriesCategoryIDPutRes() {}

type V1AdminCategoriesCategoryIDPutUnauthorized Error

func (*V1AdminCategoriesCategoryIDPutUnauthorized) v1AdminCategoriesCategoryIDPutRes() {}

type V1AdminCategoriesGetBadRequest Error

func (*V1AdminCategoriesGetBadRequest) v1AdminCategoriesGetRes() {}

type V1AdminCategoriesGetNotFound Error

func (*V1AdminCategoriesGetNotFound) v1AdminCategoriesGetRes() {}

type V1AdminCategoriesGetUnauthorized Error

func (*V1AdminCategoriesGetUnauthorized) v1AdminCategoriesGetRes() {}

type V1AdminCategoriesPostBadRequest Error

func (*V1AdminCategoriesPostBadRequest) v1AdminCategoriesPostRes() {}

type V1AdminCategoriesPostConflict Error

func (*V1AdminCategoriesPostConflict) v1AdminCategoriesPostRes() {}

type V1AdminCategoriesPostUnauthorized Error

func (*V1AdminCategoriesPostUnauthorized) v1AdminCategoriesPostRes() {}

// V1AdminFiltersFilterIDDeleteNoContent is response for V1AdminFiltersFilterIDDelete operation.
type V1AdminFiltersFilterIDDeleteNoContent struct{}

func (*V1AdminFiltersFilterIDDeleteNoContent) v1AdminFiltersFilterIDDeleteRes() {}

type V1AdminFiltersFilterIDDeleteNotFound Error

func (*V1AdminFiltersFilterIDDeleteNotFound) v1AdminFiltersFilterIDDeleteRes() {}

type V1AdminFiltersFilterIDDeleteUnauthorized Error

func (*V1AdminFiltersFilterIDDeleteUnauthorized) v1AdminFiltersFilterIDDeleteRes() {}

type V1AdminFiltersGetBadRequest Error

func (*V1AdminFiltersGetBadRequest) v1AdminFiltersGetRes() {}

type V1AdminFiltersGetNotFound Error

func (*V1AdminFiltersGetNotFound) v1AdminFiltersGetRes() {}

type V1AdminFiltersGetUnauthorized Error

func (*V1AdminFiltersGetUnauthorized) v1AdminFiltersGetRes() {}

type V1AdminFiltersPostBadRequest Error

func (*V1AdminFiltersPostBadRequest) v1AdminFiltersPostRes() {}

type V1AdminFiltersPostConflict Error

func (*V1AdminFiltersPostConflict) v1AdminFiltersPostRes() {}

type V1AdminFiltersPostReq struct {
	// Уникальный фильтр.
	Word string `json:"word"`
}

// GetWord returns the value of Word.
func (s *V1AdminFiltersPostReq) GetWord() string {
	return s.Word
}

// SetWord sets the value of Word.
func (s *V1AdminFiltersPostReq) SetWord(val string) {
	s.Word = val
}

type V1AdminFiltersPostUnauthorized Error

func (*V1AdminFiltersPostUnauthorized) v1AdminFiltersPostRes() {}

type V1AdminPositionsGetBadRequest Error

func (*V1AdminPositionsGetBadRequest) v1AdminPositionsGetRes() {}

type V1AdminPositionsGetNotFound Error

func (*V1AdminPositionsGetNotFound) v1AdminPositionsGetRes() {}

type V1AdminPositionsGetUnauthorized Error

func (*V1AdminPositionsGetUnauthorized) v1AdminPositionsGetRes() {}

type V1AdminPositionsPositionIDDeleteBadRequest Error

func (*V1AdminPositionsPositionIDDeleteBadRequest) v1AdminPositionsPositionIDDeleteRes() {}

type V1AdminPositionsPositionIDDeleteNotFound Error

func (*V1AdminPositionsPositionIDDeleteNotFound) v1AdminPositionsPositionIDDeleteRes() {}

// V1AdminPositionsPositionIDDeleteOK is response for V1AdminPositionsPositionIDDelete operation.
type V1AdminPositionsPositionIDDeleteOK struct{}

func (*V1AdminPositionsPositionIDDeleteOK) v1AdminPositionsPositionIDDeleteRes() {}

type V1AdminPositionsPositionIDDeleteUnauthorized Error

func (*V1AdminPositionsPositionIDDeleteUnauthorized) v1AdminPositionsPositionIDDeleteRes() {}

type V1AdminPositionsPositionIDPutBadRequest Error

func (*V1AdminPositionsPositionIDPutBadRequest) v1AdminPositionsPositionIDPutRes() {}

type V1AdminPositionsPositionIDPutConflict Error

func (*V1AdminPositionsPositionIDPutConflict) v1AdminPositionsPositionIDPutRes() {}

type V1AdminPositionsPositionIDPutNotFound Error

func (*V1AdminPositionsPositionIDPutNotFound) v1AdminPositionsPositionIDPutRes() {}

type V1AdminPositionsPositionIDPutUnauthorized Error

func (*V1AdminPositionsPositionIDPutUnauthorized) v1AdminPositionsPositionIDPutRes() {}

type V1AdminPositionsPostBadRequest Error

func (*V1AdminPositionsPostBadRequest) v1AdminPositionsPostRes() {}

type V1AdminPositionsPostConflict Error

func (*V1AdminPositionsPostConflict) v1AdminPositionsPostRes() {}

type V1AdminPositionsPostUnauthorized Error

func (*V1AdminPositionsPostUnauthorized) v1AdminPositionsPostRes() {}

type V1AnalyticsAnalyticIDGetBadRequest Error

func (*V1AnalyticsAnalyticIDGetBadRequest) v1AnalyticsAnalyticIDGetRes() {}

type V1AnalyticsAnalyticIDGetNotFound Error

func (*V1AnalyticsAnalyticIDGetNotFound) v1AnalyticsAnalyticIDGetRes() {}

type V1AnalyticsAnalyticIDLimitGetBadRequest Error

func (*V1AnalyticsAnalyticIDLimitGetBadRequest) v1AnalyticsAnalyticIDLimitGetRes() {}

type V1AnalyticsAnalyticIDLimitGetNotFound Error

func (*V1AnalyticsAnalyticIDLimitGetNotFound) v1AnalyticsAnalyticIDLimitGetRes() {}

// Ref: #
type Word struct {
	// Слово.
	Word string `json:"word"`
	// Количество упоминаний данного слова.
	Mentions int `json:"mentions"`
}

// GetWord returns the value of Word.
func (s *Word) GetWord() string {
	return s.Word
}

// GetMentions returns the value of Mentions.
func (s *Word) GetMentions() int {
	return s.Mentions
}

// SetWord sets the value of Word.
func (s *Word) SetWord(val string) {
	s.Word = val
}

// SetMentions sets the value of Mentions.
func (s *Word) SetMentions(val int) {
	s.Mentions = val
}
